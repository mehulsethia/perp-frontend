"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[5218],{65218:(e,a,t)=>{t.d(a,{offchainLookup:()=>d,offchainLookupSignature:()=>c});var r=t(64997);class s extends r.aM{constructor(e){let{callbackSelector:a,cause:t,data:s,extraData:n,sender:o,urls:c}=e;var l;super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],null!=(l=t.metaMessages)&&l.length?"":[],"Offchain Gateway Call:",c&&["  Gateway URL(s):",...c.map((e=>"    ".concat((0,r.aN)(e))))],"  Sender: ".concat(o),"  Data: ".concat(s),"  Callback selector: ".concat(a),"  Extra data: ".concat(n)].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class n extends r.aM{constructor(e){let{result:a,url:t}=e;super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:["Gateway URL: ".concat((0,r.aN)(t)),"Response: ".concat((0,r.aO)(a))]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class o extends r.aM{constructor(e){let{sender:a,to:t}=e;super("Reverted sender address does not match target contract address (`to`).",{metaMessages:["Contract address: ".concat(t),"OffchainLookup sender address: ".concat(a)]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}const c="0x556f1830",l={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function d(e,a){let{blockNumber:t,blockTag:c,data:d,to:u}=a;const{args:i}=(0,r.aR)({data:d,abi:[l]}),[f,h,p,b,w]=i;try{if(!function(e,a){if(!(0,r.aP)(e))throw new r.aQ({address:e});if(!(0,r.aP)(a))throw new r.aQ({address:a});return e.toLowerCase()===a.toLowerCase()}(u,f))throw new o({sender:f,to:u});const a=await async function(e){let{data:a,sender:t,urls:s}=e;var o;let c=new Error("An unknown error occurred.");for(let l=0;l<s.length;l++){const e=s[l],d=e.includes("{data}")?"GET":"POST",u="POST"===d?{data:a,sender:t}:void 0;try{const s=await fetch(e.replace("{sender}",t).replace("{data}",a),{body:JSON.stringify(u),method:d});let l;if(l=null!=(o=s.headers.get("Content-Type"))&&o.startsWith("application/json")?(await s.json()).data:await s.text(),!s.ok){c=new r.aV({body:u,details:null!=l&&l.error?(0,r.aO)(l.error):s.statusText,headers:s.headers,status:s.status,url:e});continue}if(!(0,r.aW)(l)){c=new n({result:l,url:e});continue}return l}catch(b){c=new r.aV({body:u,details:b.message,url:e})}}throw c}({data:p,sender:f,urls:h}),{data:s}=await(0,r.aS)(e,{blockNumber:t,blockTag:c,data:(0,r.aT)([b,(0,r.aU)([{type:"bytes"},{type:"bytes"}],[a,w])]),to:u});return s}catch(y){throw new s({callbackSelector:b,cause:y,data:d,extraData:w,sender:f,urls:h})}}}}]);
//# sourceMappingURL=5218.6c3b2da6.chunk.js.map